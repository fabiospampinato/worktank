export default 'var f=s=>{let n=!1,r;return()=>(n||(n=!0,r=s()),r)},l=f;globalThis.WorkTankWorkerBackend=(()=>{let{addEventListener:s,postMessage:n}=globalThis,r={},g=e=>e instanceof Error?e:typeof e=="string"?new Error(e):new Error("Unknown error"),c=e=>{try{n({type:"log",value:e})}catch(t){console.error("Failed to post log message",t)}},u=e=>{var t,o;((t=e.data)==null?void 0:t.type)==="exec"?p(e.data.method,e.data.args):c(`Unknown message type: ${(o=e.data)==null?void 0:o.type}`)},p=(e,t)=>{let o=r[e];new Promise(d=>d(o.apply(void 0,t))).then(y,a)},a=e=>{let{name:t,message:o,stack:i}=g(e);try{n({type:"result",error:{name:t,message:o,stack:i}})}catch(d){a("Failed to post error message")}},y=e=>{try{n({type:"result",value:e})}catch(t){a(t)}};return{ready:l(()=>{s("message",u),n({type:"ready"})}),registerEnv:e=>{globalThis.process||(globalThis.process={}),globalThis.process.env={...globalThis.process.env,...e}},registerMethods:e=>{for(let t in e){let o=e[t];typeof o=="function"?r[t]=o:c(`Method "${t}" is not a function and will be ignored`)}}}})(); /*! BOOTLOADER_PLACEHOLDER !*/';
